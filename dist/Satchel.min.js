/* ! @preserve @bnjmnrsh/satchel v1.0.0 | (c) 2022 bnjmnrsh | ISC | https://github.com/bnjmnrsh/satchel */
class e{#e;#t;#r;constructor(t=null,r={},o=!1,s="pocket"){if(this.#t=o?window.localStorage:window.sessionStorage,!t)throw new Error("Satchel: a key is required.");if("string"!=typeof t)throw new Error("Satchel: key must be a string");if("object"!=typeof r)throw new Error("Satchel: cargo must be an object");if("boolean"!=typeof o)throw new Error("Satchel: local must be true or false");if("string"!=typeof s)throw new Error("Satchel: pocket must be an string");this.stcl=e.stcl,this.#e=`${this.stcl}.${s}.${t}`,this.#r={data:void 0,expiry:null},r={...this.#r,...r},this.set(r)}age(){const e=JSON.parse(this.#t.getItem(this.#e));return{age:Number(Date.now()-e.creation),creation:e.creation?Number(e.creation):null,expiry:e.expiry?Number(e.expiry):null,fresh:Boolean(this.isFresh())}}bin(){const t=this.#t.getItem(this.#e);if(this.#t.removeItem(this.#e),!this.#t.getItem(this.#e))return e.#o({key:String(this.#e),oldValue:String(t),storageArea:String(e.#s(this.#t)),action:"bin"}),!0}get(e=!1){const t=this.#t.getItem(this.#e);return!!t&&(!!(this.isFresh()&&!e||e)&&JSON.parse(t))}set({data:t,expiry:r}){if("number"!=typeof r&&null!==r)throw new Error("Satchel: Expiry must be null or a number.");if("string"!=typeof t&&"object"!=typeof t&&void 0!==t)throw console.warn(typeof t),new Error("Satchel: Data must be a string or an object.");const o=this.get(!0),s={};if(s.data=t||null,s.expiry=r||null,!t&&!r&&o)throw new Error(`Satchel: The key ("${this.#e}") already exists in ${e.#s(this.#t)}, and "data" and "expiry" atributes have not been set, set these or create a new unique key.`);return s.creation=Number(o.creation)||Date.now(),this.#t.setItem(this.#e,JSON.stringify(s)),e.#o({key:String(this.#e),newValue:JSON.stringify(s),oldValue:o?JSON.stringify(o):null,storageArea:String(e.#s(this.#t)),action:"set"}),this}isFresh(){const e=JSON.parse(this.#t.getItem(this.#e));return Boolean(!e?.expiry||e.expiry-Date.now()>0)}getKey(){return String(this.#e)}static getAllPocketKeys(e="pocket",t=!1){const r=t?window.localStorage:window.sessionStorage,o=Object.keys(r).map((t=>t.startsWith(this.stcl+"."+e)?t:"")).filter((e=>e));return Array.from(o)}static#s(e){return e===localStorage?"LocalStorage":"SessionStorage"}static#o(e={},t=!1){let r={key:null,newValue:null,oldValue:null,storageArea:null,url:String(window.location.href)||null,action:null};t&&(r={pocket:null,keysBefore:null,keysRemaining:null,storageArea:null,url:String(window.location.href)||null,action:null}),e={...r,...e};const o=new CustomEvent("Satchel",{bubbles:!0,cancelable:!0,detail:e});return document.dispatchEvent(o)}static emptyPocket(t="pocket",r=!1){const o=r?window.localStorage:window.sessionStorage,s=e.getAllPocketKeys(t,r);if(!s.length)return console.warn("No pocket keys found for "+t+" in "+o),s;Object.keys(s).forEach((e=>{o.removeItem(s[e])}));const n=e.getAllPocketKeys(t,r).length;return e.#o({pocket:t,keysBefore:s.length,keysRemaining:n,storageArea:e.#s(o),action:"emptyPocket"},!0),n}static tidyPocket(t="pocket",r=!1){const o=r?localStorage:sessionStorage,s=e.getAllPocketKeys(t,r);if(!s.length)return null;Object.keys(s).forEach((e=>{const t=JSON.parse(o.getItem(s[e])).expiry;if(!t||t-Date.now()>0)return null;o.removeItem(s[e])}));const n=e.getAllPocketKeys(t,r).length;return e.#o({pocket:String(t),keysBefore:Number(s.length),keysRemaining:Number(n),storageArea:String(e.#s(o)),action:"tidyPocket"},!0),n}static getSatchel(t,r="pocket",o=!1){if(!t)throw new Error("Satchel: a key is required.");if("string"!=typeof t)throw new Error("Satchel: key must be a string");if("string"!=typeof r)throw new Error("Satchel: pocket must be an string");if("boolean"!=typeof o)throw new Error("Satchel: local must be true or false");const s=`${e.stcl}.${r}.${t}`,n=o?localStorage:sessionStorage,i=JSON.parse(n.getItem(s));return!!i&&new e(t,i,o,r)}}e.stcl="stcl";export{e as Satchel};
//# sourceMappingURL=Satchel.min.js.map
