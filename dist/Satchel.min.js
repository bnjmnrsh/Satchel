/*! satchel v1.0.0 | (c) 2022 undefined | ISC License | https://github.com/bnjmnrsh/ */
class e{#e;#t;#s;constructor(t=null,s={},o=!1,r="pocket"){if(this.#t=o?window.localStorage:window.sessionStorage,!t)throw new Error("Satchel: a key is required.");this.stcl=e.stcl,this.#e=`${this.stcl}.${r}.${t}`,this.#s={data:void 0,expiry:null},s={...this.#s,...s},this.set(s)}age(){const e=JSON.parse(this.#t.getItem(this.#e));return{age:Date.now()-e.creation,creation:e.creation,expiry:e.expiry,fresh:this.isFresh()}}bin(){const t=this.#t.getItem(this.#e);if(this.#t.removeItem(this.#e),!this.#t.getItem(this.#e))return e.#o({key:this.#e,oldValue:JSON.parse(t),storageArea:e.#r(this.#t),action:"bin"}),!0}get(e=!1){const t=this.#t.getItem(this.#e);return!!t&&(!!(this.isFresh()&&!e||e)&&JSON.parse(t))}set({data:t,expiry:s}){if("number"!=typeof s&&null!==s)throw new Error("Satchel: Expiry must be null or a number.");const o=this.get(!0),r={};if(r.data=t||null,r.expiry=s||null,!t&&!s&&o)throw new Error(`Satchel: The key ("${this.#e}") already exists in ${e.#r(this.#t)}, and "data" and "expiry" atributes have not been set, set these or create a new unique key.`);return r.creation=o.creation||Date.now(),this.#t.setItem(this.#e,JSON.stringify(r)),e.#o({key:this.#e,newValue:r,oldValue:o,storageArea:e.#r(this.#t),action:"set"}),this}isFresh(){const e=JSON.parse(this.#t.getItem(this.#e));return!e?.expiry||e.expiry-Date.now()>0}getKey(){return this.#e}static getAllPocketKeys(e="pocket",t=!1){const s=t?window.localStorage:window.sessionStorage;return Object.keys(s).map((t=>t.startsWith(this.stcl+"."+e)?t:"")).filter((function(e){return e}))}static#r(e){return e===localStorage?"LocalStorage":"SessionStorage"}static#o(e={},t=!1){let s={key:null,newValue:null,oldValue:null,storageArea:null,url:window.location.href||null,action:null};t&&(s={pocket:null,keysBefore:null,keysRemaining:null,storageArea:null,url:window.location.href||null,action:null}),e={...s,...e};const o=new CustomEvent("Satchel",{bubbles:!0,cancelable:!0,detail:e});return document.dispatchEvent(o)}static emptyPocket(t="pocket",s=!1){const o=s?window.localStorage:window.sessionStorage,r=e.getAllPocketKeys(t,s);if(!r.length)return console.warn("No pocket keys found for "+t+" in "+o),r;Object.keys(r).forEach((e=>{o.removeItem(r[e])}));const n=e.getAllPocketKeys(t,s);return e.#o({pocket:t,keysBefore:r,keysRemaining:n,storageArea:e.#r(o),action:"emptyPocket"},!0),n}static tidyPocket(t="pocket",s=!1){const o=s?localStorage:sessionStorage,r=e.getAllPocketKeys(t,s);if(!r.length)return null;Object.keys(r).forEach((e=>{const t=JSON.parse(o.getItem(r[e])).expiry;if(!t||t-Date.now()>0)return null;o.removeItem(r[e])}));const n=e.getAllPocketKeys(t,s).length;return e.#o({pocket:t,keysBefore:r.length,keysRemaining:n,storageArea:e.#r(o),action:"tidyPocket"},!0),n}static getSatchel(t,s="pocket",o=!1){const r=`${e.stcl}.${s}.${t}`,n=o?localStorage:sessionStorage,i=JSON.parse(n.getItem(r));return!!i&&new e(t,i,o,s)}}e.stcl="stcl";export{e as Satchel};
//# sourceMappingURL=Satchel.min.js.map
