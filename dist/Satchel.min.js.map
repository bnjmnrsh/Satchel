{"version":3,"file":"Satchel.min.js","sources":["../src/Satchel.js"],"sourcesContent":["/**\n * A utility for managaing sessionStorage and localStorage\n *\n */\nclass Satchel {\n  #stcl = 'stcl'\n  #pocketKey\n  #storage\n\n  /**\n   * @class Satchel\n   * @classdec Create new Satchel instance\n   * @param {string} key Storage key\n   * @param {object} cargo The data to be saved to Storage\n   * @param {boolean} local Specify sessionStorage (default) or localStorage\n   * @param {string} pocket Namespace for Storage keys\n   */\n  constructor(key = null, cargo = {}, local = false, pocket = 'satchel') {\n    this.#storage = local ? localStorage : sessionStorage\n\n    if (!this.#storageAvailable(this.#storage)) return false\n    if (!key) throw new Error('Satchel: a Key is required.')\n\n    this.#pocketKey = `${this.#stcl}.${this.pocket}.${this.key}`\n\n    this.settings = { data: undefined, expiry: null }\n    this.cargo = { ...this.settings, ...cargo }\n\n    // Keep creation time from being edited\n    Object.defineProperty(this.cargo, 'creation', {\n      enumerable: true,\n      writable: false,\n      value: Date.now()\n    })\n\n    // Send the cargo to Storage\n    this.set(this.cargo)\n  }\n\n  /**\n   * Use Storage events?\n   * TODO:https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#responding_to_storage_changes_with_the_storageevent\n   *\n   * Emit custom events for Satchel\n   * @typedef {CustomEvent}\n   * @param {object} detail current CustomEvent details\n   * @property {string} detail.type, the type of Storage object\n   * @property {string} detail.key name of the Storage key being called\n   * @property {string} detail.action the name of the function emiting the event\n   * @property {string | null} detail.data the stringified data for the given key\n   * @returns {CustomEvent} CustomEvent\n   */\n  #emit(detail) {\n    const required = {\n      type: null,\n      key: null,\n      action: null,\n      data: null\n    }\n    detail = { ...required, ...detail }\n    const event = new CustomEvent('Satchel', {\n      bubbles: true,\n      cancelable: true,\n      detail\n    })\n    return document.dispatchEvent(event)\n  }\n\n  /**\n   * Todo: replace with https://www.npmjs.com/package/storage-available\n   *\n   * Borrowed humbly from https://www.npmjs.com/package/storage-available\n   * @returns {boolean} true if the environment has localStorage\n   */\n  #storageAvailable(type) {\n    // let SatchelStorgeTest\n\n    // const key = '__testSatchelEnv__'\n    // if (SatchelStorgeTest !== undefined) return false\n    // try {\n    //   if (!localStorage) return false\n    // } catch (e) {\n    //   console.warn(e)\n    //   return false\n    // }\n    // try {\n    //   localStorage.setItem(key, key)\n    //   localStorage.removeItem(key, key)\n    //   SatchelStorgeTest = true\n    // } catch (e) {\n    //   SatchelStorgeTest = !!(this.#isOutOfSpace(e) && localStorage.length)\n    // }\n    // return SatchelStorgeTest\n\n    try {\n      storageAvailable(type)\n    } catch (e) {\n      if (!this.#storageFull(type)) return false\n      try {\n        // pruneStorageAvailable(type)\n      } catch (e) {\n        return false\n      }\n    }\n  }\n\n  /**\n   * Borrowed humbly from https://github.com/pamelafox/lscache/blob/master/lscache.js\n   * @returns {boolean} true if the environment has localStorage\n   */\n  #storageFull(e) {\n    return (\n      e &&\n      (e.name === 'QUOTA_EXCEEDED_ERR' ||\n        e.name === 'NS_ERROR_DOM_QUOTA_REACHED' ||\n        e.name === 'QuotaExceededError')\n    )\n  }\n\n  /**\n   * Returns an object of age and freshness related data\n   *\n   * @typedef {Object} Age object\n   * @property {number} age in milliseconds\n   * @property {number} creation Date.now() (ms)\n   * @property {boolean} fresh if Store key is fresh\n   * @return {Age} An age object representing the age of the current Store key.\n   */\n  age() {\n    const store = JSON.parse(this.#storage.getItem(this.#pocketKey))\n    return {\n      age: Date.now() - store.creation,\n      creation: store.creation,\n      expiry: store.expiry,\n      fresh: this.isFresh()\n    }\n  }\n\n  /**\n   *\n   * @returns {null | boolian:false } nullif su\n   */\n  bin() {\n    this.#storage.removeItem(this.#pocketKey)\n\n    if (!this.#storage.getItem(this.#pocketKey)) {\n      this.#emit({\n        type: this.#storage,\n        key: this.#pocketKey,\n        action: 'bin'\n      })\n      return null\n    }\n  }\n\n  get(ignore = false) {\n    const item = this.#storage.getItem(this.#pocketKey)\n    if (this.isFresh() && !ignore) {\n      return item\n    } else if (ignore) {\n      return JSON.parse(this.#storage.getItem(this.#pocketKey))\n    }\n\n    this.#emit({\n      type: this.#storage,\n      key: this.#pocketKey,\n      action: 'get',\n      data: item\n    })\n\n    return this\n  }\n\n  /**\n   * Sets the data, for a given key and namespace\n   *\n   * @param {Object} settings object\n   * @property {Object} data the Storage object to set\n   * @property {number} expiry the expiery date in (ms)\n   * @property {string} creation the creation date in (ms) Date.now()\n   *\n   * @return {Object} Satchel\n   */\n  set({ data, expiry, creation }) {\n    const current = this.get(true)\n    const temp = {}\n    temp.data = data || null\n    temp.expiry = expiry || this.cargo?.expiry || null\n    temp.creation = current?.creation || this.cargo.creation // dont overwrite existing creation time\n\n    this.#storage.setItem(this.#pocketKey, JSON.stringify(temp))\n\n    this.#emit({\n      type: this.#storage,\n      key: this.#pocketKey,\n      action: 'set',\n      data: temp\n    })\n    return this\n  }\n\n  /**\n   * Check if current item is fresh.\n   *\n   * @returns {boolean} true if the item has not expired\n   */\n  isFresh() {\n    const store = JSON.parse(this.#storage.getItem(this.#pocketKey))\n    return !store?.expiry ? true : store.expiry - Date.now() > 0\n  }\n\n  /**\n   * Returns the current namespaced Store key (pocket.key)\n   *\n   * @returns string\n   */\n  getID() {\n    return this.#pocketKey\n  }\n\n  /**\n   * TODO: remove .includes for a more robust check\n   *\n   * Returns array of keys for the a 'pocket' namespace.\n   *\n   * @param {string} pocket namespace prefix, default 'satchel'\n   * @param {boolean} local specify sessionStorage (default) or localStorage\n   * @returns {array} array of Storage keys for the current pocket.\n   */\n  static getAllPocketKeys(pocket = 'satchel', local = false) {\n    return Object.keys(localStorage)\n      .map((key) => {\n        return key.startsWith(this.#stcl + '.' + pocket) ? key : ''\n      })\n      .filter(function (e) {\n        return e\n      })\n  }\n\n  /**\n   * Clears all items in a specified 'pocket' namespace, default 'satchel'\n   *\n   * @param {string} pocket namespace prefix, default 'satchel'\n   * @param {boolean} local specify sessionStorage (default) or localStorage\n   * @returns {numbererger} The number of items remaing in store, which if sucessful should be 0.\n   */\n  static emptyPocket(pocket = 'satchel', local = false) {\n    const store = local ? localStorage : sessionStorage\n    const items = Satchel.getAllPocketKeys(this.#stcl + '.' + pocket, store)\n    if (!items.length) return null\n\n    Object.keys(items).forEach((item) => {\n      store.removeItem(items[item])\n    })\n\n    const remaing = Satchel.getAllPocketKeys(pocket, store).length\n\n    document.dispatchEvent(\n      new CustomEvent('Satchel', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          action: 'emptyPocket',\n          remaing\n        }\n      })\n    )\n\n    return remaing\n  }\n\n  /**\n   *  Destroys all expired items from a given 'pocket' namespace\n   *\n   * @param {string} pocket namespace prefix, default 'satchel'\n   * @param {boolean} local specify sessionStorage (default) or localStorage\n   * @returns The number of items remaing in store that have yet to expire.\n   */\n  static cleanPocket(pocket = 'satchel', local = false) {\n    const store = local ? localStorage : sessionStorage\n    const items = Satchel.getAllPocketKeys(pocket, store)\n    if (!items.length) return null\n\n    Object.keys(items).forEach((item) => {\n      const expiry = JSON.parse(store.getItem(items[item])).expiry\n      if (!expiry || expiry - Date.now() > 0) return null\n      store.removeItem(items[item])\n    })\n    const remaing = Satchel.getAllPocketKeys(\n      this.#stcl + '.' + pocket,\n      store\n    ).length\n\n    document.dispatchEvent(\n      new CustomEvent('SatchelStatic', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          action: 'cleanPocket',\n          remaing\n        }\n      })\n    )\n\n    return remaing\n  }\n\n  /**\n   * Returns an instance of Satchel associated with the provided key, or false.\n   *\n   * @param {string} key  key for target item\n   * @param {string} pocket namespace prefix, default 'satchel'\n   * @param {string} local specify sessionStorage (default) or localStorage\n   * @returns {Satchel} new Satchel instance | false\n   */\n  static getKey(key, pocket = 'satchel', local = false) {\n    const pocketKey = `${this.#stcl}.${this.pocket}.${this.key}`\n    const store = local ? localStorage : sessionStorage\n    const item = store.getItem(pocketKey)\n    if (!item) return false\n\n    return new Satchel(key, null, local, pocket)\n  }\n}\n\nexport { Satchel }\n"],"names":["Satchel","stcl","pocketKey","storage","constructor","key","cargo","local","pocket","this","localStorage","sessionStorage","storageAvailable","Error","settings","data","undefined","expiry","Object","defineProperty","enumerable","writable","value","Date","now","set","emit","detail","type","action","event","CustomEvent","bubbles","cancelable","document","dispatchEvent","e","storageFull","name","age","store","JSON","parse","getItem","creation","fresh","isFresh","bin","removeItem","get","ignore","item","current","temp","setItem","stringify","getID","static","keys","map","startsWith","filter","items","getAllPocketKeys","length","forEach","remaing"],"mappings":"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"}