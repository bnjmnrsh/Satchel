{"version":3,"file":"Satchel.js","sources":["../src/Satchel.js"],"sourcesContent":["/**\n * A utility for managaing the freshness of namespaced sessionStorage and localStorage entries.\n */\nclass Satchel {\n  static _stcl\n  #pocketKey\n  #store\n  #settings\n\n  /**\n   * @class Satchel\n   * @classdec Create new Satchel instance\n   * @param {string|null} key Storage key\n   * @param {object} cargo The cargo payload to be saved to Storage\n   * @property {object|string} cargo.data The data to be saved, may be string or object\n   * @property {number|null} cargo.expiry The expiry time of the cargo ,may be a number or null\n   * @param {boolean} [local=false] Specify sessionStorage (default) or localStorage\n   * @param {string} [pocket='pocket'] Namespace for Storage keys, default is 'pocket'\n   */\n  constructor(key = null, cargo = {}, local = false, pocket = 'pocket') {\n    this.#store = local ? window.localStorage : window.sessionStorage\n    if (!key) {\n      throw new Error('Satchel: a \"key\" is required.')\n    }\n    if (typeof key !== 'string') {\n      throw new Error('Satchel: \"key\" must be a string.')\n    }\n    if (!this.#isObject(cargo)) {\n      throw new Error('Satchel: {cargo} must be an object.')\n    }\n    if (typeof local !== 'boolean') {\n      throw new Error('Satchel: \"local\" must be a boolean.')\n    }\n    if (typeof pocket !== 'string') {\n      throw new Error('Satchel: \"pocket\" must be a string.')\n    }\n\n    this.#pocketKey = `${Satchel.stcl}.${pocket}.${key}`\n    this.#settings = { data: undefined, expiry: null }\n\n    cargo = { ...this.#settings, ...cargo }\n\n    // Set the cargo to Storage\n    this.set(cargo)\n  }\n\n  /**\n   * Setter for Satchel.stcl must be a string.\n   *\n   * @static\n   * @memberof Satchel\n   */\n  static set stcl(prefix) {\n    if (typeof prefix !== 'string') {\n      throw new Error('Satchel.stcl must be a string.')\n    }\n    this._stcl = prefix\n  }\n\n  /**\n   * Getter for the Satchel.stcl property.\n   * Returns the prefix for current Satchel instance, defaulting to 'stcl'.\n   *\n   * @static\n   * @memberof Satchel\n   */\n  static get stcl() {\n    return this._stcl ? this._stcl : 'stcl'\n  }\n\n  /**\n   * Returns an object of age and freshness related data\n   *\n   * @typedef {object} Age object\n   * @property {number} age in milliseconds\n   * @property {number} creation Date.now() (ms)src/Satchel.js\n   * @property {boolean} fresh if Store key is fresh\n   * @return {Age|null} An age object representing the age of the current Store key.\n   */\n  age() {\n    const store = JSON.parse(this.#store.getItem(this.#pocketKey))\n    if (!store) return null\n    return {\n      age: Date.now() - store._creation,\n      creation: store._creation,\n      expiry: store.expiry ? store.expiry : null,\n      fresh: this.isFresh()\n    }\n  }\n\n  /**\n   * Remove the current namespaced key from the store.\n   *\n   * @returns { boolian:true | null } Returns true on success, or null if no record found.\n   */\n  bin() {\n    const item = this.#store.getItem(this.#pocketKey)\n    if (!item) return null\n    this.#store.removeItem(this.#pocketKey)\n    Satchel.#emit({\n      key: this.#pocketKey,\n      oldValue: item,\n      storageArea: Satchel.#storageAreaString(this.#store),\n      action: 'bin'\n    })\n    return true\n  }\n\n  /**\n   * Get the data for the current Storage key.\n   *\n   * @param {boolean} getStale flag to ignore stale entries from a \"pocket\"\n   * @returns {object|boolan:false} the data for the stored key or false.\n   */\n  get(getStale = false) {\n    const item = this.#store.getItem(this.#pocketKey)\n    if (!item) return null\n    if ((this.isFresh() && !getStale) || getStale) {\n      return JSON.parse(item)\n    }\n    return false\n  }\n\n  /**\n   * Sets the cargo object for a given key and namespace.\n   *\n   * @param {object} settings object\n   * @property {object|string} data the Storage object to set\n   * @property {number|null} expiry the expiery date in (ms)\n   *\n   * @return {Satchel} Satchel\n   */\n  set({ data, expiry }) {\n    // check if a key exists in store already\n    const exsisting = JSON.parse(this.#store.getItem(this.#pocketKey))\n    // allow data and expiry to be set independently\n    data = exsisting?.data && !data ? exsisting.data : data\n    expiry = exsisting?.expiry && !expiry ? exsisting.expiry : expiry\n\n    if (\n      data &&\n      typeof data !== 'string' &&\n      typeof data !== 'number' &&\n      !this.#isObject(data)\n    ) {\n      throw new Error(\n        'Satchel.set({data}): must be either null or a number, string or object.'\n      )\n    }\n\n    if (typeof expiry !== 'number' && expiry !== null) {\n      throw new Error(\n        'Satchel.set({expiry}): \"expiry\" must be null or a number.'\n      )\n    }\n    if (data && this.#isObject(data)) {\n      try {\n        JSON.parse(JSON.stringify(data))\n      } catch (e) {\n        throw new Error(`Satchel.set({data}): ${e}`)\n      }\n    }\n    const storedEntry = this.get(true)\n    const temp = {}\n    temp.data = data || null\n    temp.expiry = expiry || null\n\n    // dont overwrite existing creation time\n    temp._creation = storedEntry?._creation || Date.now()\n    // Set storage values\n    this.#store.setItem(this.#pocketKey, JSON.stringify(temp))\n\n    Satchel.#emit({\n      key: this.#pocketKey,\n      newValue: JSON.stringify(temp),\n      oldValue: storedEntry ? JSON.stringify(storedEntry) : null,\n      storageArea: Satchel.#storageAreaString(this.#store),\n      action: 'set'\n    })\n    return this\n  }\n\n  /**\n   * Check if current item is fresh.\n   *\n   * @returns {boolean|null} true if the item has not expired, null if the record doesn't exist.\n   */\n  isFresh() {\n    const store = JSON.parse(this.#store.getItem(this.#pocketKey))\n    if (!store) return null\n    return !store?.expiry ? true : store.expiry - Date.now() > 0\n  }\n\n  /**\n   * Returns the current namespaced Store key (pocket.key), the key is prefixed with 'stcl'.\n   * Note that this is the internal reference to the key, not proof the key has been set to Storage.\n   *\n   * @returns {string} the key to the current pocket-key\n   */\n  getKey() {\n    return this.#pocketKey\n  }\n\n  /**\n   * Emulates the StorageEvent API, which may be preferable for some use cases.\n   * https://developer.mozilla.org/en-US/docs/Web/API/StorageEvent\n   *\n   * Emit custom events for Satchel\n   * @typedef {CustomEvent}\n   * @param {object} detail Event details\n   * @property {string|null} detail.key name of the Storage key being called\n   * @property {string|null} detail.pocket name of the Storage pocket being cleaned\n   * @property {string|null} detail.newValue the updated value of the Storage key\n   * @property {string|null} detail.oldValue the old value of the Storage key\n   * @property {number|null} detail.keysBefore then number of keys in the pocket before emptyPocket or tidyPocket\n   * @property {number|null} detail.keysAfter then number of keys in the pocket after emptyPocket or tidyPocket\n   * @property {string} detail.storageArea, the type of Storage object\n   * @property {string} detail.url, the url of the document whoes key changed\n   * @property {string} detail.action the name of the Satchel function emiting the event\n   * @property {boolean} [pocketClean = false] Optional flag to indiacte a emptyPocket or tidyPocket opperation.\n   * @returns {CustomEvent} CustomEvent\n   */\n  static #emit(detail = {}) {\n    const required = {\n      key: null,\n      newValue: null,\n      oldValue: null,\n      storageArea: null,\n      url: window.location.href,\n      action: null\n    }\n    detail = { ...required, ...detail }\n    const event = new CustomEvent('Satchel', {\n      bubbles: true,\n      cancelable: true,\n      detail\n    })\n    return document.dispatchEvent(event)\n  }\n\n  /**\n   * Get the Storage type as a string: 'localStorage' or 'sessionStorage'.\n   *\n   * @param {object} Storage object\n   * @returns {string} the Storage type as a string 'localStorage' or 'SessionStorage'\n   */\n  static #storageAreaString(store) {\n    return store === window.localStorage ? 'LocalStorage' : 'SessionStorage'\n  }\n\n  /**\n   * Test if a value is an interable object.\n   *\n   * @param {*} doesit the value to be checked\n   * @returns\n   */\n  #isObject(doesit) {\n    return doesit && typeof doesit === 'object' && doesit.constructor === Object\n  }\n\n  /**\n   * Returns an instance of Satchel associated with the given key, pocket,store, or false if none is found.\n   *\n   * @param {string} key key for the stored item\n   * @param {string} [pocket='pocket'] namespace prefix, default 'pocket'\n   * @param {string} [local='false'] specify sessionStorage (default) or localStorage\n   * @returns {Satchel|false} new Satchel instance | false\n   */\n  static getSatchel(key, local = false, pocket = 'pocket') {\n    if (!key) {\n      throw new Error('Satchel.getSatchel(key): a \"key\" is required.')\n    }\n    if (typeof key !== 'string') {\n      throw new Error('Satchel.getSatchel(key): \"key\" must be a string.')\n    }\n    if (typeof local !== 'boolean') {\n      throw new Error(\n        'Satchel.getSatchel(key, local): \"local\" must be a boolean.'\n      )\n    }\n    if (typeof pocket !== 'string') {\n      throw new Error(\n        'Satchel.getSatchel(key, local, pocket): \"pocket\" must be an string.'\n      )\n    }\n\n    const pocketKey = `${Satchel.stcl}.${pocket}.${key}`\n    const store = local ? window.localStorage : window.sessionStorage\n    const item = JSON.parse(store.getItem(pocketKey))\n    if (!item || item.length === 0) return null\n\n    return new Satchel(key, item, local, pocket)\n  }\n\n  /**\n   * A static method for setting a Satchel key, without calling `new Satchel`.\n   * When you want to use Satchel only for it's side effects.\n   *\n   * @param {string|null} key Storage key\n   * @param {object} cargo The cargo payload to be saved to Storage\n   * @property {object|string} cargo.data The data to be saved, may be string or object\n   * @property {number|null} cargo.expiry The expiry time of the cargo ,may be a number or null\n   * @param {boolean} [local=false] Specify sessionStorage (default) or localStorage\n   * @param {string} [pocket='pocket'] Namespace for Storage keys, default is 'pocket'\n   * @returns {undefined}\n   */\n  static setKey(key = null, cargo = {}, local = false, pocket = 'pocket') {\n    /* eslint-disable no-new */\n    new Satchel(key, cargo, local, pocket)\n  }\n}\n\nexport { Satchel }\n"],"names":[],"mappings":";AAAA;AACA;AACA;AACA,MAAM,OAAO,CAAC;AACd,EAAE,OAAO,KAAK;AACd,EAAE,UAAU;AACZ,EAAE,MAAM;AACR,EAAE,SAAS;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,CAAC,GAAG,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,QAAQ,EAAE;AACxE,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,eAAc;AACrE,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AACtD,KAAK;AACL,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACjC,MAAM,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;AACzD,KAAK;AACL,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;AAChC,MAAM,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC5D,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AACpC,MAAM,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC5D,KAAK;AACL,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACpC,MAAM,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AAC5D,KAAK;AACL;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;AACxD,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,GAAE;AACtD;AACA,IAAI,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,KAAK,GAAE;AAC3C;AACA;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAC;AACnB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,IAAI,CAAC,MAAM,EAAE;AAC1B,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACpC,MAAM,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;AACvD,KAAK;AACL,IAAI,IAAI,CAAC,KAAK,GAAG,OAAM;AACvB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,WAAW,IAAI,GAAG;AACpB,IAAI,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM;AAC3C,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,GAAG;AACR,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC;AAClE,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI;AAC3B,IAAI,OAAO;AACX,MAAM,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS;AACvC,MAAM,QAAQ,EAAE,KAAK,CAAC,SAAS;AAC/B,MAAM,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI;AAChD,MAAM,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE;AAC3B,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,GAAG;AACR,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAC;AACrD,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI;AAC1B,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAC;AAC3C,IAAI,OAAO,CAAC,KAAK,CAAC;AAClB,MAAM,GAAG,EAAE,IAAI,CAAC,UAAU;AAC1B,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,WAAW,EAAE,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC;AAC1D,MAAM,MAAM,EAAE,KAAK;AACnB,KAAK,EAAC;AACN,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,QAAQ,GAAG,KAAK,EAAE;AACxB,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAC;AACrD,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,IAAI;AAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;AACnD,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7B,KAAK;AACL,IAAI,OAAO,KAAK;AAChB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;AACxB;AACA,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC;AACtE;AACA,IAAI,IAAI,GAAG,SAAS,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,KAAI;AAC3D,IAAI,MAAM,GAAG,SAAS,EAAE,MAAM,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,OAAM;AACrE;AACA,IAAI;AACJ,MAAM,IAAI;AACV,MAAM,OAAO,IAAI,KAAK,QAAQ;AAC9B,MAAM,OAAO,IAAI,KAAK,QAAQ;AAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAC3B,MAAM;AACN,MAAM,MAAM,IAAI,KAAK;AACrB,QAAQ,yEAAyE;AACjF,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE;AACvD,MAAM,MAAM,IAAI,KAAK;AACrB,QAAQ,2DAA2D;AACnE,OAAO;AACP,KAAK;AACL,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;AACtC,MAAM,IAAI;AACV,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;AACxC,OAAO,CAAC,OAAO,CAAC,EAAE;AAClB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,CAAC;AACpD,OAAO;AACP,KAAK;AACL,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAC;AACtC,IAAI,MAAM,IAAI,GAAG,GAAE;AACnB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,KAAI;AAC5B,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,KAAI;AAChC;AACA;AACA,IAAI,IAAI,CAAC,SAAS,GAAG,WAAW,EAAE,SAAS,IAAI,IAAI,CAAC,GAAG,GAAE;AACzD;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;AAC9D;AACA,IAAI,OAAO,CAAC,KAAK,CAAC;AAClB,MAAM,GAAG,EAAE,IAAI,CAAC,UAAU;AAC1B,MAAM,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AACpC,MAAM,QAAQ,EAAE,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,IAAI;AAChE,MAAM,WAAW,EAAE,OAAO,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC;AAC1D,MAAM,MAAM,EAAE,KAAK;AACnB,KAAK,EAAC;AACN,IAAI,OAAO,IAAI;AACf,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,GAAG;AACZ,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAC;AAClE,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI;AAC3B,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAChE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,GAAG;AACX,IAAI,OAAO,IAAI,CAAC,UAAU;AAC1B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;AAC5B,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,GAAG,EAAE,IAAI;AACf,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,QAAQ,EAAE,IAAI;AACpB,MAAM,WAAW,EAAE,IAAI;AACvB,MAAM,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI;AAC/B,MAAM,MAAM,EAAE,IAAI;AAClB,MAAK;AACL,IAAI,MAAM,GAAG,EAAE,GAAG,QAAQ,EAAE,GAAG,MAAM,GAAE;AACvC,IAAI,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,SAAS,EAAE;AAC7C,MAAM,OAAO,EAAE,IAAI;AACnB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,MAAM;AACZ,KAAK,EAAC;AACN,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,kBAAkB,CAAC,KAAK,EAAE;AACnC,IAAI,OAAO,KAAK,KAAK,MAAM,CAAC,YAAY,GAAG,cAAc,GAAG,gBAAgB;AAC5E,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,CAAC,MAAM,EAAE;AACpB,IAAI,OAAO,MAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,WAAW,KAAK,MAAM;AAChF,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,UAAU,CAAC,GAAG,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,QAAQ,EAAE;AAC3D,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC;AACtE,KAAK;AACL,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;AACjC,MAAM,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC;AACzE,KAAK;AACL,IAAI,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;AACpC,MAAM,MAAM,IAAI,KAAK;AACrB,QAAQ,4DAA4D;AACpE,OAAO;AACP,KAAK;AACL,IAAI,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AACpC,MAAM,MAAM,IAAI,KAAK;AACrB,QAAQ,qEAAqE;AAC7E,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,SAAS,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;AACxD,IAAI,MAAM,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,eAAc;AACrE,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAC;AACrD,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;AAC/C;AACA,IAAI,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;AAChD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,MAAM,CAAC,GAAG,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,EAAE,KAAK,GAAG,KAAK,EAAE,MAAM,GAAG,QAAQ,EAAE;AAC1E;AACA,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAC;AAC1C,GAAG;AACH;;;;"}